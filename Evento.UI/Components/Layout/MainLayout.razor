@inherits LayoutComponentBase


<RadzenLayout>
    <RadzenHeader>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
            <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
            <RadzenLabel Text="Confirmação de eventos" />
        </RadzenStack>
    </RadzenHeader>
    <RadzenSidebar Responsive="false" Style="width: max-content">
        <RadzenPanelMenu DisplayStyle="@(sidebarExpanded? MenuItemDisplayStyle.IconAndText: MenuItemDisplayStyle.Icon)" ShowArrow="true">
            <RadzenPanelMenuItem Text="Início" Icon="home" Path="" />
            <RadzenPanelMenuItem Text="Pessoas" Icon="person" Path="/pessoas" />
            <RadzenPanelMenuItem Text="Eventos" Icon="event" Path="/eventos" />
            @* <RadzenPanelMenuItem Text="Configurações" Icon="settings">
                <RadzenPanelMenuItem Text="Temas" Icon="color_lens" Path="/configSystem" />
            </RadzenPanelMenuItem> *@
        </RadzenPanelMenu>
    </RadzenSidebar>
    <RadzenBody>
        <ErrorBoundary @ref="errorBoundary">
            <ChildContent>
                @Body
            </ChildContent>
            <ErrorContent>
                <RadzenStack class="rz-background-color-danger rz-p-5 rz-shadow-md">
                    <RadzenStack Gap="0.1rem">
                        <RadzenText Text="Oops, algo deu errado!" TextStyle="TextStyle.H3" />
                        <RadzenText Text="Message" TextStyle="TextStyle.H5" />
                        <RadzenText Text="@context.Message" TextStyle="TextStyle.Body1" />

                        @if (showStackTrace)
                        {
                            <RadzenStack Gap="0.1rem">
                                <RadzenText Text="Source" TextStyle="TextStyle.H5" />
                                <RadzenText Text="@context.Source" TextStyle="TextStyle.Body1" />
                                <RadzenText Text="StackTrace" TextStyle="TextStyle.H5" />
                                <RadzenText Text="@context.StackTrace" TextStyle="TextStyle.Body1" />
                            </RadzenStack>
                        }

                        <RadzenStack Orientation="Orientation.Horizontal">
                            <RadzenButton Text="@(showStackTrace ? "Ocultar Detalhes" : "Mostrar Detalhes")"
                                          ButtonStyle="ButtonStyle.Secondary"
                                          Click="@(() => showStackTrace = !showStackTrace)" />
                            <RadzenButton Text="Tentar novamente" ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Reset" Icon="sync_problem" Click="@(() => errorBoundary?.Recover())" />
                        </RadzenStack>
                    </RadzenStack>
                </RadzenStack>
            </ErrorContent>
        </ErrorBoundary>
    </RadzenBody>
    <RadzenFooter>
        
    </RadzenFooter>
</RadzenLayout>

<RadzenComponents @rendermode="InteractiveServer" />

@code {
    bool sidebarExpanded = true;
    private bool showStackTrace = true;
    private ErrorBoundary? errorBoundary;

    protected override void OnParametersSet()
    {
        errorBoundary?.Recover();
    }
}